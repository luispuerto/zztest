library("xlsx", lib.loc="~/Library/R/3.x/library")
library(xlsx)
load("var/metrics.RData")
capabilities()
capabilities()
install.packages("RGIS3")
devtools::install_github("jannes-m/RQGIS3")
remove.packages("RQGIS", lib="~/Library/R/3.x/library")
remove.packages("RQGIS", lib="~/Library/R/3.x/library")
devtools::install_github("jannes-m/RQGIS3")
devtools::install_github("jannes-m/RQGIS3")
install.packages("RQGIS")
install.packages("Rgdal")
install.packages("rgdal")
devtools::install_github("jannes-m/RQGIS3")
install.packages("sf")
install.packages("sf")
install.packages("sf")
install.packages("rgdal")
devtools::install_github("r-spatial/sf")
install.packages("units")
install.packages("units")
devtools::install_github("r-spatial/sf")
devtools::install_github("jannes-m/RQGIS3")
library(RQGIS3)
?sf
help(sf)
help("sf")
??sf
?sf
? sf
sf ?
help ( package = "sf")
library(xlsx)
detach("package:xlsx", unload = TRUE)
iinstall.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
capabilities()
capabilities()
capabilities()
capabilities()
capabilities()
library(rJava)
detach("package:rJava", unload = TRUE)
library(rgdal)
detach("package:rgdal", unload = TRUE)
install.packages("lidR")
install.packages("Cairo")
install.packages("Cairo")
capabilities()
install.packages("Cairo")
install.packages("lidR")
install.packages("imager")
install.packages(c("igraph", "imager"))
install.packages("lidR")
# Packages to load ----
# Ex: library(XXXX) # version 1.2.3 from CRAN or source
library(lidR)
library(magrittr)
library(magrittr)
#Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
package_list <- as.character(package_df$Package)
#Re-install Install packages
install.packages(package_list)
install.packages("data.table")
library(data.table)
?getDTthreads
library(sp)
View(package_df)
getClass(Spatial())
getClass(Spatial
)
getClass("Spatial")
getClass("SpatialPolygons")
getSlots("spatialpoligons ")
getSlots("spatialpoligons")
getSlots("SpatialPoligons")
getSlots("spatialPolygons")
getSlots("SpatialPolygons")
library(sf)
getClass("sf")
getClass("sfc")
library(tidyverse)
?par
Rcpp::sourceCpp("helloworld.cpp")
install.packages("RcppArmadillo")
install.packages("RcppArmadillo")
install.packages("RcppArmadillo")
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source")
library(lidR)
detach("package:lidR", unload = TRUE)
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source")
install.packages("RcppArmadillo", type = "source", verbose = TRUE)
install.packages("RcppArmadillo", type = "source", verbose = TRUE)
devtools::install_github(https://github.com/RcppCore/RcppArmadillo)
devtools::install_github("https://github.com/RcppCore/RcppArmadillo")
install.packages("RcppArmadillo")
Rcpp::sourceCpp('helloworld.cpp')
hello_world()
library(tradeflows2018)
library(tradeflows)
?ttradeflows
??ttradeflows
library(tradeflows2018)
package_df <- as.data.frame(installed.packages("/Library/Frameworks/R.framework/Versions/2.15/Resources/library"))
package_list <- as.character(
packages_df[packages_df$Built != paste0(
version$major,
".",
version$minor), "Package"])
update.packages(ask=FALSE, checkBuilt = TRUE)
devtools::install_github("r-dbi/RMariaDB")
library(abind)
detach("package:abind", unload = TRUE)
library(acepack)
detach("package:acepack", unload = TRUE)
library(addinslist)
detach("package:addinslist", unload = TRUE)
library(askpass)
detach("package:askpass", unload = TRUE)
llibrary()
library()
installed.packages()
#Get currently installed packages
package_df <- as.data.frame(installed.packages())
View(package_df)
#Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
package_list <- as.character(
packages_df[packages_df$Built != paste0(
version$major,update.packages(ask=FALSE, checkBuilt = TRUE)
".",
version$minor), "Package"])
#Re-install Install packages
install.packages(package_list)
#Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
package_list <- as.character(
packages_df[packages_df$Built != paste0(
version$major,update.packages(ask=FALSE, checkBuilt = TRUE)
".",
version$minor), "Package"])
package_list <- as.character(package_df$Package)
#Re-install Install packages
install.packages(package_list)
#Re-install Install packages
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
View(package_df)
package_clean <- package_df$Package(=!"RMariaDB")
package_clean <- package_df$Package=!"RMariaDB"
package_clean <- package_df$Package = !"RMariaDB"
package_clean <- package_df$Package =! "RMariaDB"
package_clean <- package_df$Package ==! "RMariaDB"
package_clean <- package_df$Package != "RMariaDB"
package_clean <- package_df$Package(!= "RMariaDB" OR != )
package_clean <- package_df$Package(!= "RMariaDB" OR !="RcppArmadillo" )
package_clean <- package_df$Package(!= "RMariaDB" OR != "RcppArmadillo" )
package_clean <- package_df$Package(!= "RMariaDB" OR != "RcppArmadillo",)
package_clean <- package_df$Package(c(!= "RMariaDB" OR != "RcppArmadillo"),)
package_clean <- package_df$Package(!= "RMariaDB")
package_clean <- package_df(package_df$Package != "RMariaDB")
package_clean <- package_df[package_df$Package != "RMariaDB"]
package_clean <- package_df[package_df$Package != "RMariaDB", ]
View(package_clean)
package_clean <- package_df[package_df$Package != "RMariaDB" | package_df$Package != "RcppArmadillo", ]
package_clean <- package_df[
package_df$Package != "RMariaDB" |
package_df$Package != "RcppArmadillo" |
package_df$Package != "RMariaDB", ]
View(package_clean)
package_list <- as.character(package_df$Package)
#Re-install Install packages
install.packages(package_list)
package_clean <- package_df[
package_df$Package != "RMariaDB" |
package_df$Package != "RcppArmadillo" |
package_df$Package != "iGrap",
]
#Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
package_clean <- package_df[
package_df$Package != "RMariaDB" |
package_df$Package != "RcppArmadillo" |
package_df$Package != "iGrap",
]
View(package_df)
package_clean <- package_df[
package_df$Package != "RMariaDB" |
package_df$Package != "RcppArmadillo" |
package_df$Package != "iGrap",
]
package_clean <- package_df[
package_df$Package != "RMariaDB" OR
package_df$Package != "RcppArmadillo" OR
package_df$Package != "iGrap",
]
package_clean <- package_df[
package_df$Package != "RMariaDB" OR
package_df$Package != "RcppArmadillo" OR
package_df$Package != "iGrap",
]
package_clean <- package_df[
(package_df$Package != "RMariaDB" OR
package_df$Package != "RcppArmadillo" OR
package_df$Package != "iGrap"),
]
package_clean <- package_df[
(
package_df$Package != "RMariaDB" OR
package_df$Package != "RcppArmadillo" OR
package_df$Package != "iGrap"
),
]
package_clean <- package_df[
(
package_df$Package != "RMariaDB" OR
package_df$Package != "RcppArmadillo" OR
package_df$Package != "iGrap"
),
]
styler:::set_style_transformers()
styler:::style_selection()
View(package_df)
install.packages("benchmark")
remove.packages("benchmark", lib="~/Library/R/3.x/library")
#Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
View(package_df)
package_clean <- package_df[
(package_df$Package != "RMariaDB" OR
package_df$Package != "RcppArmadillo" OR
package_df$Package != "iGrap"), ]
package_clean <- package_df[
(package_df$Package != "RMariaDB" |
package_df$Package != "RcppArmadillo" |
package_df$Package != "iGrap"), ]
package_clean <- package_df[
(package_df$Package !"RMariaDB" |
package_df$Package !"RcppArmadillo" |
package_df$Package !"iGrap") &
package_df$Built !"3.6.1", ]
package_clean <- package_df[
(package_df$Package !="RMariaDB" |
package_df$Package !="RcppArmadillo" |
package_df$Package !="iGrap") &
package_df$Built !="3.6.1", ]
View(package_clean)
#Re-install Install packages
install.packages(package_list)
package_list <- as.character(package_df$Package)
#Re-install Install packages
install.packages(package_list)
install.packages(package_list)
package_list <- as.character(package_clean$Package)
#Re-install Install packages
install.packages(package_list)
#Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
package_clean <- package_df[
(package_df$Package !="RMariaDB" |
package_df$Package !="RcppArmadillo" |
package_df$Package !="iGrap") &
package_df$Built !="3.6.1", ]
View(package_clean)
install.packages("udunits2")
install.packages("udunits2")
install.packages("udunits2")
install.packages("udunits2")
remove.packages("udunits2", lib="~/Library/R/3.x/library")
install.packages("PKI")
install.packages("spDataLarge")
remove.packages("rLiDAR", lib="~/Library/R/3.x/library")
remove.packages("spDataLarge", lib="~/Library/R/3.x/library")
remove.packages("PKI", lib="~/Library/R/3.x/library")
package_clean <- package_df[
(package_df$Package !="RMariaDB" |
package_df$Package !="RcppArmadillo" |
package_df$Package !="iGrap") &
package_df$Built !="3.6.1", ]
#Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
package_clean <- package_df[
(package_df$Package !="RMariaDB" |
package_df$Package !="RcppArmadillo" |
package_df$Package !="iGrap") &
package_df$Built !="3.6.1", ]
package_clean <- package_df[
(package_df$Package !="RMariaDB" |
package_df$Package !="RcppArmadillo" |
package_df$Package !="iGrap"), ]
package_df$Package !="RMariaDB"
(package_df$Package !="RMariaDB" , ]
(package_df$Package !="RMariaDB", ]
package_clean <- package_df[
package_df$Package !="RMariaDB", ]
package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- package_df[package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- package_df[(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap")), ]
package_clean <- package_df[(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- package_df[package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap", ]
package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
?subset
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != RMariaDB)
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != "RMariaDB")
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != "RMariaDB")
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != "RMariaDB" | Package !="RcppArmadillo")
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != "RMariaDB" or Package !="RcppArmadillo")
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != "RMariaDB" OR Package !="RcppArmadillo")
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != "RMariaDB", Package !="RcppArmadillo")
# package_clean <- package_df[c(package_df$Package !="RMariaDB" | package_df$Package !="RcppArmadillo" | package_df$Package !="iGrap"), ]
package_clean <- subset(package_df, Package != "RMariaDB" & Package !="RcppArmadillo")
package_df$Package !="RMariaDB" &
package_df$Package !="RcppArmadillo" & package_df$Package !="iGrap"), ]
package_clean <- package_df[
package_df$Package !="RMariaDB" &
package_df$Package !="RcppArmadillo" &
package_df$Package !="iGrap", ]
package_clean <- package_df[
package_df$Package !="RMariaDB" &
package_df$Package !="RcppArmadillo" &
package_df$Package !="iGraph", ]
package_clean <- package_df[
package_df$Package !="RMariaDB" &
package_df$Package !="RcppArmadillo" &
package_df$Package !="igraph", ]
package_clean <- package_df[
package_df$Package != "RMariaDB" | "RcppArmadillo" | "igraph", ]
package_clean <- package_df[
package_df$Package != ("RMariaDB" | "RcppArmadillo" | "igraph"), ]
package_clean <- package_df[
(package_df$Package != "RMariaDB" | "RcppArmadillo" | "igraph"), ]
package_clean <- package_df[
package_df$Package != "RMariaDB" &
package_df$Package !="RcppArmadillo" &
package_df$Package !="igraph", ]
library(RMariaDB)
install.packages("DBI")
devtools::install_github("r-dbi/DBI")
library(RMariaDB
)
library(RMariaDB
9
detach("package:RMariaDB", unload = TRUE)
library(RMariaDB)
detach("package:RMariaDB", unload = TRUE)
library(RMariaDB)
library(FAOSTAT)
detach("package:FAOSTAT", unload = TRUE)
library(rJava)
detach("package:rJava", unload = TRUE)
library(xlsx)
detach("package:xlsx", unload = TRUE)
library(rgdal)
detach("package:rgdal", unload = TRUE)
library(data.table)
styler:::set_style_transformers()
styler:::style_active_file()
# Get currently installed packages
package_df <- as.data.frame(installed.packages("/Users/lpuerto/Library/R/3.x/library"))
package_clean <- package_df[
package_df$Package != "RMariaDB" & # Needs to be build from GitHub
package_df$Package != "DBI" & # Needs to be build from GitHub
package_df$Package != "RcppArmadillo" & # Needs dissable Armadillo first
package_df$Package != "igraph", # Needs to dissable suite-sparse first
]
package_list <- as.character(package_clean$Package)
christmas::xmas2019regression()
christmas::xmas2019regression()
christmas::xmas2019regression()
library(dplyr)
library(tidyverse
)
library(lubridate)
ymd("2006-02-12")
install.packages("ProjectTemplate")
ProjectTemplate::create.project(temp)
ProjectTemplate::create.project("temp")
library(tidyverse)
by_cyl <- mtcars %>% group_by(cyl)
summarise(by_cyl, disp = mean(disp), hp = mean(hp))
summarise(mtcars, disp = mean(disp), hp = mean(hp))
`yrpc-2012` <- readRDS("/Users/lpuerto/Downloads/yrpc-2012.rds")
View(`yrpc-2012`)
library(tidyverse)
glimpse(`yrpc-2012`)
as_tibble(fromJSON("https://api.tradestatistics.io/tables"))
library(jsonlite)
library(jsonlite)
as_tibble(fromJSON("https://api.tradestatistics.io/tables"))
https://rdrr.io/r/utils/install.packages.html
install.packages("tradestatistics")
library(tradestatistics)
ots_country_code(spain)
ots_country_code("Spain")
library(tidyverse)
ots_country_code("Spain")
as.tibble(ots_country_code("spain"))
as_tibble(ots_country_code("spain"))
as_tibble(ots_country_code("spain"))
as_tibble(ots_country_code("spain"))
library(ttradestatistics)
library(tradestatistics)
library(tradestatistics)
ots_create_tidy_data(years = 2017, reporters = "finlnad", partners = "all", sections = 44)
ots_create_tidy_data(years = 1980, reporters = "chl", partners = "chn")
ots_create_tidy_data(years = c(2017:2017),
reporters = "finlnad",
partners = "all",
sections = 44
lk)
ots_create_tidy_data(years = c(2017:2017),
reporters = "finlnad",
partners = "all",
sections = 44)
ots_create_tidy_data(years = c(2017:2017),
reporters = "finland",
partners = "all",
sections = 44)
ots_create_tidy_data(years = c(2017:2017),
reporters = "fin",
partners = "all",
sections = 44)
ots_create_tidy_data(years = c(2017:2017),
reporters = "chl",
partners = "all",
sections = 44)
ots_create_tidy_data(years = 1980, reporters = "chl", products = "apple", table = "yrc")
ots_products_shortnames
tradestatistics::ots_products_shortnames
knit_with_parameters('~/Code/zzTests/comtrade-scripts-report.Rmd')
unlink('comtrade-scripts-report_cache', recursive = TRUE)
devtools::install_github("ropenscilabs/ropsec")
devtools::install_github("ropenscilabs/ropsec")
ropsec::full_on_audit()
unlink('comtrade-scripts-report_cache', recursive = TRUE)
devtools::install_github(EuropeanForestInstitute/tradeflows-pv, ref = "tidy-up")
devtools::install_github("EuropeanForestInstitute/tradeflows-pv", ref = "tidy-up")
?devtools::install_github
devtools::install_github("EuropeanForestInstitute/tradeflows-pv",
ref = "tidy-up")
devtools::install_github("EuropeanForestInstitute/tradeflows-pv",
ref = "tidy-up")
devtools::install_github(EuropeanForestInstitute/tradeflows-pv,
ref = "tidy-up")
devtools::install_github(repo = "EuropeanForestInstitute/tradeflows-pv",
ref = "tidy-up")
usethis::git_sitrep()
devtools::install_github(repo = "EuropeanForestInstitute/tradeflows-pv",
ref = "tidy-up")
devtools::install_github("EuropeanForestInstitute/tradeflows-pv",
ref = "tidy-up")
devtools::install_github("EuropeanForestInstitute/tradeflows-pv",
ref = "tidy-up")
devtools::install_github("EuropeanForestInstitute/tradeflows",
ref = "tidy-up")
devtools::install_github("EuropeanForestInstitute/tradeflows-pv")
devtools::install_github("EuropeanForestInstitute/tradeflows-pv",
ref = tidy-up)
devtools::install_github("EuropeanForestInstitute/tradeflows-pv",
ref = "tidying-up")
devtools::install_github("EuropeanForestInstitute/tradeflows-pv",
ref = "tidying-up")
install.packages("Rcpp")
install.packages("lidR")
install.packages("RcppArmadillo")
install.packages("lidR")
install.packages("RcppArmadillo")
install.packages("RcppArmadillo")
install.packages("lidR")
install.packages("classInt")
install.packages("sf")
install.packages("rgdal")
install.packages("tmvnsim")
install.packages("psych")
install.packages("mnormt")
install.packages("psych")
rstudioapi::addTheme("https://raw.githubusercontent.com/patrickshox/Mojave-Dark-RStudio-Theme/master/Mojave%20Dark.rstheme", apply=TRUE, force=TRUE)
rstudioapi::addTheme("https://raw.githubusercontent.com/patrickshox/Mojave-Dark-RStudio-Theme/master/Mojave%20Dark%20(Static).rstheme", apply=TRUE, force=TRUE)
install.packages("rgdal")
install.packages("sf")
install.packages("rJava")
library(c("gdal", "sf", "rJava"))
library(rJava)
library(c("rgdal", "sf", "rJava"))
library(rgdal)
library(sf)
rstudio::global(2021)
install.packages("rtweet")
install.packages("reprex")
install.packages("rJava")
install.packages("tidytuesdayR")
install.packages("tidytuesdayR")
